{"version":3,"sources":["services/imagesApi.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["fetchImages","currentPage","searchQuery","pageSize","axios","get","then","response","data","hits","Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGallery","children","id","ImageGalleryItem","images","onClick","map","webformatURL","tags","largeImageURL","src","alt","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleOverlayClick","target","window","addEventListener","removeEventListener","createPortal","App","isLoading","error","showModal","onChangeQuery","getImages","options","prevState","scrollTo","top","scrollHeight","behavior","catch","finally","toggleModal","handleClick","image","prevProps","renderLoadButton","length","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ba6033cd.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst fetchImages = ({ currentPage = 1, searchQuery = \"\", pageSize = 12 }) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&per_page=${pageSize}&key=21244519-50cd1518df4ac35a1fd6e5fdb&image_type=photo&orientation=horizontal`\n    )\n    .then((response) => response.data.hits);\n};\n\nexport default fetchImages;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Searchbar extends Component {\n  state = {\n    query: \"\",\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = (e) => {\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.query);\n\n    this.setState({ query: \"\" });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            value={this.state.query}\n            onChange={this.handleChange}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGallery = ({ children }) => (\n  <ul id=\"imageGallery\" className=\"ImageGallery\">\n    {children}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  children: PropTypes.object.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from \"prop-types\";\n\nconst ImageGalleryItem = ({ images, onClick }) =>\n  images.map(({ id, webformatURL, tags, largeImageURL }) => (\n    <li className=\"ImageGalleryItem\" key={id}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n        onClick={() => {\n          onClick(largeImageURL);\n        }}\n      />\n    </li>\n  ));\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","const Button = ({ onClick }) => {\n  return (\n    <button onClick={onClick} type=\"button\" className=\"Button\">\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nexport class Modal extends Component {\n  static propTypes = {\n    children: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  handleOverlayClick = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleOverlayClick}>\n        <div className=\"Modal\">{children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\n\nimport \"./styles.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport fetchImages from \"../src/services/imagesApi\";\nimport Loader from \"react-loader-spinner\";\n\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport ImageGalleryItem from \"./components/ImageGalleryItem\";\nimport Button from \"./components/Button\";\nimport Modal from \"./components/Modal\";\n\nexport class App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    error: null,\n    largeImageURL: \"\",\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.getImages();\n    }\n  }\n\n  onChangeQuery = (query) => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  getImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { currentPage, searchQuery };\n\n    this.setState({ isLoading: true });\n\n    fetchImages(options)\n      .then((images) => {\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }));\n        if (currentPage > 1) {\n          window.scrollTo({\n            top: document.querySelector(\"#imageGallery\").scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  handleClick = (image) => {\n    this.toggleModal();\n    this.setState({ largeImageURL: image });\n  };\n\n  render() {\n    const { images, isLoading, error, showModal, largeImageURL } = this.state;\n    const renderLoadButton = images.length > 0 && !isLoading;\n\n    return (\n      <div>\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        {error && <h2>Please try again your request</h2>}\n\n        <ImageGallery>\n          <ImageGalleryItem images={images} onClick={this.handleClick} />\n        </ImageGallery>\n\n        {isLoading && (\n          <Loader\n            className=\"Loader\"\n            type=\"Circles\"\n            color=\"#471135\"\n            height={100}\n            width={100}\n          />\n        )}\n\n        {renderLoadButton && <Button onClick={this.getImages} />}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImageURL} alt=\"\" />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}